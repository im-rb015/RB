 add a property called balance in the ATM class
2. While creating the object of ATM set that value to some number
 
 
3. withdraw function add a parameter. while withdraw function will be called that value should be subtracted freom balance.
4. Same for deposit - that will have a number as parameter each time deposit is called that will increase the balanc
5. Have a function called shawBalance that will print the present available balance in the ATM machine
 
add a constructor to set the initial
 
withdraw function add validation so that balance can not be less than class ATM {
  constructor(initialBalance) {
    this.balance = initialBalance;
  }

  withdraw(amount) {
    if (amount <= this.balance) {
      this.balance -= amount;
      console.log(`Withdrawn: ${amount}. New balance: ${this.balance}`);
    } else {
      console.log("Insufficient balance. Withdrawal denied.");
    }
  }

  deposit(amount) {
    this.balance += amount;
    console.log(`Deposited: ${amount}. New balance: ${this.balance}`);
  }

  showBalance() {
    console.log(`Available balance: ${this.balance}`);
  }
}

// Example usage:
const atm = new ATM(1000); // Initialize ATM with a balance of 1000
atm.showBalance();          // Prints: Available balance: 1000
atm.deposit(500);           // Prints: Deposited: 500. New balance: 1500
atm.withdraw(300);          // Prints: Withdrawn: 300. New balance: 1200
atm.withdraw(1500);         // Prints: Insufficient balance. Withdrawal denied.
atm.showBalance();          // Prints: Available balance: 1200
